TOTAL TESTING SCORE: 2.0%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY BY TEST SET

Test Set                                      Pts Max  % Ttl  % Max
--------------------------------------------- --- --- ------ ------
tests/threads/Rubric.alarm                      7/  7   1.0%/  1.0%
tests/threads/Rubric.priority                  25/ 25   1.0%/  1.0%
tests/userprog/Rubric.functionality             0/ 40   0.0%/  8.0%
tests/userprog/Rubric.robustness                0/ 40   0.0%/  5.0%
tests/vm/Rubric.functionality                   0/ 82   0.0%/ 60.0%
tests/vm/Rubric.robustness                      0/ 29   0.0%/ 20.0%
tests/filesys/base/Rubric                       0/ 17   0.0%/  5.0%
tests/vm/cow/Rubric                             0/  1   0.0%/ 25.0%
--------------------------------------------- --- --- ------ ------
Total                                                   2.0%/125.0%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY OF INDIVIDUAL TESTS

Functionality and robustness of alarm clock (tests/threads/Rubric.alarm):
	     1/ 1 tests/threads/alarm-single
	     1/ 1 tests/threads/alarm-multiple
	     1/ 1 tests/threads/alarm-simultaneous
	     2/ 2 tests/threads/alarm-priority

	     1/ 1 tests/threads/alarm-zero
	     1/ 1 tests/threads/alarm-negative

	- Section summary.
	      6/  6 tests passed
	      7/  7 points subtotal

Functionality of priority scheduler (tests/threads/Rubric.priority):
	     1/ 1 tests/threads/priority-change
	     1/ 1 tests/threads/priority-preempt

	     1/ 1 tests/threads/priority-fifo
	     2/ 2 tests/threads/priority-sema
	     2/ 2 tests/threads/priority-condvar

	     2/ 2 tests/threads/priority-donate-one
	     3/ 3 tests/threads/priority-donate-multiple
	     3/ 3 tests/threads/priority-donate-multiple2
	     3/ 3 tests/threads/priority-donate-nest
	     3/ 3 tests/threads/priority-donate-chain
	     2/ 2 tests/threads/priority-donate-sema
	     2/ 2 tests/threads/priority-donate-lower

	- Section summary.
	     12/ 12 tests passed
	     25/ 25 points subtotal

Functionality of system calls (tests/userprog/Rubric.functionality):
	- Test argument passing on Pintos command line.
	  ** 0/ 1 tests/userprog/args-none
	  ** 0/ 1 tests/userprog/args-single
	  ** 0/ 1 tests/userprog/args-multiple
	  ** 0/ 1 tests/userprog/args-many
	  ** 0/ 1 tests/userprog/args-dbl-space

	- Test "create" system call.
	  ** 0/ 1 tests/userprog/create-empty
	  ** 0/ 1 tests/userprog/create-long
	  ** 0/ 1 tests/userprog/create-normal
	  ** 0/ 1 tests/userprog/create-exists

	- Test "open" system call.
	  ** 0/ 1 tests/userprog/open-missing
	  ** 0/ 1 tests/userprog/open-normal
	  ** 0/ 1 tests/userprog/open-twice

	- Test "read" system call.
	  ** 0/ 1 tests/userprog/read-normal
	  ** 0/ 1 tests/userprog/read-zero

	- Test "write" system call.
	  ** 0/ 1 tests/userprog/write-normal
	  ** 0/ 1 tests/userprog/write-zero

	- Test "close" system call.
	  ** 0/ 1 tests/userprog/close-normal

	- Test "fork" system call.
	  ** 0/ 1 tests/userprog/fork-once
	  ** 0/ 1 tests/userprog/fork-multiple
	  ** 0/ 2 tests/userprog/fork-close
	  ** 0/ 2 tests/userprog/fork-read

	- Test "exec" system call.
	  ** 0/ 1 tests/userprog/exec-once
	  ** 0/ 1 tests/userprog/exec-arg
	  ** 0/ 2 tests/userprog/exec-read

	- Test "wait" system call.
	  ** 0/ 1 tests/userprog/wait-simple
	  ** 0/ 1 tests/userprog/wait-twice

	- Test "exit" system call.
	  ** 0/ 1 tests/userprog/exit

	- Test "halt" system call.
	  ** 0/ 1 tests/userprog/halt

	- Test recursive execution of user programs.
	  ** 0/ 2 tests/userprog/fork-recursive
	  ** 0/ 2 tests/userprog/multi-recurse

	- Test read-only executable feature.
	  ** 0/ 1 tests/userprog/rox-simple
	  ** 0/ 2 tests/userprog/rox-child
	  ** 0/ 2 tests/userprog/rox-multichild

	- Section summary.
	      0/ 33 tests passed
	      0/ 40 points subtotal

Robustness of system calls (tests/userprog/Rubric.robustness):
	- Test robustness of file descriptor handling.
	  ** 0/ 1 tests/userprog/close-bad-fd
	  ** 0/ 1 tests/userprog/close-twice
	  ** 0/ 1 tests/userprog/read-bad-fd
	  ** 0/ 1 tests/userprog/read-stdout
	  ** 0/ 1 tests/userprog/write-bad-fd
	  ** 0/ 1 tests/userprog/write-stdin
	  ** 0/ 2 tests/userprog/multi-child-fd

	- Test robustness of pointer handling.
	  ** 0/ 1 tests/userprog/create-bad-ptr
	  ** 0/ 1 tests/userprog/exec-bad-ptr
	  ** 0/ 1 tests/userprog/open-bad-ptr
	  ** 0/ 1 tests/userprog/read-bad-ptr
	  ** 0/ 1 tests/userprog/write-bad-ptr

	- Test robustness of buffer copying across page boundaries.
	  ** 0/ 2 tests/userprog/create-bound
	  ** 0/ 2 tests/userprog/open-boundary
	  ** 0/ 2 tests/userprog/read-boundary
	  ** 0/ 2 tests/userprog/write-boundary
	  ** 0/ 2 tests/userprog/fork-boundary
	  ** 0/ 2 tests/userprog/exec-boundary

	- Test handling of null pointer and empty strings.
	  ** 0/ 1 tests/userprog/create-null
	  ** 0/ 1 tests/userprog/open-null
	  ** 0/ 1 tests/userprog/open-empty

	- Test robustness of "fork", "exec" and "wait" system calls.
	  ** 0/ 2 tests/userprog/exec-missing
	  ** 0/ 2 tests/userprog/wait-bad-pid
	  ** 0/ 2 tests/userprog/wait-killed

	- Test robustness of exception handling.
	  ** 0/ 1 tests/userprog/bad-read
	  ** 0/ 1 tests/userprog/bad-write
	  ** 0/ 1 tests/userprog/bad-jump
	  ** 0/ 1 tests/userprog/bad-read2
	  ** 0/ 1 tests/userprog/bad-write2
	  ** 0/ 1 tests/userprog/bad-jump2

	- Section summary.
	      0/ 30 tests passed
	      0/ 40 points subtotal

Functionality of virtual memory subsystem (tests/vm/Rubric.functionality):
	- Test stack growth.
	  ** 0/ 2 tests/vm/pt-grow-stack
	  ** 0/ 4 tests/vm/pt-grow-stk-sc
	  ** 0/ 3 tests/vm/pt-big-stk-obj

	- Test paging behavior.
	  ** 0/ 1 tests/vm/page-linear
	  ** 0/ 4 tests/vm/page-parallel
	  ** 0/ 2 tests/vm/page-shuffle
	  ** 0/ 2 tests/vm/page-merge-seq
	  ** 0/ 5 tests/vm/page-merge-par
	  ** 0/ 5 tests/vm/page-merge-mm
	  ** 0/ 5 tests/vm/page-merge-stk

	- Test "mmap" system call.
	  ** 0/ 1 tests/vm/mmap-read
	  ** 0/ 3 tests/vm/mmap-write
	  ** 0/ 2 tests/vm/mmap-ro
	  ** 0/ 2 tests/vm/mmap-shuffle
	  ** 0/ 1 tests/vm/mmap-twice
	  ** 0/ 2 tests/vm/mmap-unmap
	  ** 0/ 2 tests/vm/mmap-exit
	  ** 0/ 3 tests/vm/mmap-clean
	  ** 0/ 2 tests/vm/mmap-close
	  ** 0/ 2 tests/vm/mmap-remove
	  ** 0/ 1 tests/vm/mmap-off

	- Test memory swapping
	  ** 0/ 3 tests/vm/swap-anon
	  ** 0/ 3 tests/vm/swap-file
	  ** 0/ 6 tests/vm/swap-iter
	  ** 0/ 8 tests/vm/swap-fork

	- Test lazy loading
	  ** 0/ 4 tests/vm/lazy-anon
	  ** 0/ 4 tests/vm/lazy-file

	- Section summary.
	      0/ 27 tests passed
	      0/ 82 points subtotal

Robustness of virtual memory subsystem (tests/vm/Rubric.robustness):
	- Test robustness of page table support.
	  ** 0/ 1 tests/vm/pt-bad-addr
	  ** 0/ 3 tests/vm/pt-bad-read
	  ** 0/ 1 tests/vm/pt-write-code
	  ** 0/ 3 tests/vm/pt-write-code2
	  ** 0/ 2 tests/vm/pt-grow-bad

	- Test robustness of "mmap" system call.
	  ** 0/ 1 tests/vm/mmap-bad-fd
	  ** 0/ 1 tests/vm/mmap-bad-fd2
	  ** 0/ 1 tests/vm/mmap-bad-fd3

	  ** 0/ 3 tests/vm/mmap-inherit
	  ** 0/ 1 tests/vm/mmap-null
	  ** 0/ 1 tests/vm/mmap-zero
	  ** 0/ 2 tests/vm/mmap-zero-len

	  ** 0/ 1 tests/vm/mmap-misalign

	  ** 0/ 1 tests/vm/mmap-over-code
	  ** 0/ 1 tests/vm/mmap-over-data
	  ** 0/ 2 tests/vm/mmap-over-stk
	  ** 0/ 1 tests/vm/mmap-overlap
	  ** 0/ 1 tests/vm/mmap-bad-off
	  ** 0/ 2 tests/vm/mmap-kernel

	- Section summary.
	      0/ 19 tests passed
	      0/ 29 points subtotal

Functionality of base file system (tests/filesys/base/Rubric):
	- Test basic support for small files.
	  ** 0/ 1 tests/filesys/base/sm-create
	  ** 0/ 1 tests/filesys/base/sm-full
	  ** 0/ 1 tests/filesys/base/sm-random
	  ** 0/ 1 tests/filesys/base/sm-seq-block
	  ** 0/ 2 tests/filesys/base/sm-seq-random

	- Test basic support for large files.
	  ** 0/ 1 tests/filesys/base/lg-create
	  ** 0/ 1 tests/filesys/base/lg-full
	  ** 0/ 1 tests/filesys/base/lg-random
	  ** 0/ 1 tests/filesys/base/lg-seq-block
	  ** 0/ 2 tests/filesys/base/lg-seq-random

	- Test synchronized multiprogram access to files.
	  ** 0/ 2 tests/filesys/base/syn-read
	  ** 0/ 2 tests/filesys/base/syn-write
	  ** 0/ 1 tests/filesys/base/syn-remove

	- Section summary.
	      0/ 13 tests passed
	      0/ 17 points subtotal

Functionality of copy-on-write (tests/vm/cow/Rubric):
	- Basic functionality for copy-on-write.
	  ** 0/ 1 tests/vm/cow/cow-simple

	- Section summary.
	      0/  1 tests passed
	      0/  1 points subtotal


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/args-none FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/args-none:

Kernel command line: -q -f put args-none run args-none
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'args-none' into the file system...
Executing 'args-none':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 0000000000000061
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 64 ticks
Thread: 32 idle ticks, 28 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1778 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/args-single FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/args-single:

Kernel command line: -q -f put args-single run 'args-single onearg'
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'args-single' into the file system...
Executing 'args-single onearg':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f9 rbx 0000000000000000 rcx 0000800421bc25fa rdx 000000000000006f
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241cac rdi 0000800421bc25f9
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 64 ticks
Thread: 30 idle ticks, 30 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1802 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/args-multiple FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/args-multiple:

Kernel command line: -q -f put args-multiple run 'args-multiple some arguments for you!'
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  78,540,800 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'args-multiple' into the file system...
Executing 'args-multiple some arguments for you!':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25fb rbx 0000000000000000 rcx 0000800421bc25fc rdx 0000000000000079
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241cc1 rdi 0000800421bc25fb
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 68 ticks
Thread: 32 idle ticks, 32 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1843 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/args-many FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/args-many:

Kernel command line: -q -f put args-many run 'args-many a b c d e f g h i j k l m n o p q r s t u v'
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'args-many' into the file system...
Executing 'args-many a b c d e f g h i j k l m n o p q r s t u v':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25fe rbx 0000000000000000 rcx 0000800421bc25ff rdx 0000000000000076
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241cd4 rdi 0000800421bc25fe
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 61 ticks
Thread: 30 idle ticks, 28 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1868 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/args-dbl-space FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/args-dbl-space:

Kernel command line: -q -f put args-dbl-space run 'args-dbl-space two  spaces!'
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  156,876,800 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'args-dbl-space' into the file system...
Executing 'args-dbl-space two  spaces!':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f8 rbx 0000000000000000 rcx 0000800421bc25f9 rdx 0000000000000073
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241cb4 rdi 0000800421bc25f8
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 68 ticks
Thread: 34 idle ticks, 31 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1826 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/create-empty FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/create-empty:

Kernel command line: -q -f put create-empty run create-empty
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  106,291,200 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'create-empty' into the file system...
Executing 'create-empty':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 0000000000000063
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 72 ticks
Thread: 33 idle ticks, 36 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1790 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/create-long FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/create-long:

Kernel command line: -q -f put create-long run create-long
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  154,009,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'create-long' into the file system...
Executing 'create-long':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f4 rbx 0000000000000000 rcx 0000800421bc25f5 rdx 0000000000000063
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f4
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 69 ticks
Thread: 34 idle ticks, 32 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1786 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/create-normal FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/create-normal:

Kernel command line: -q -f put create-normal run create-normal
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'create-normal' into the file system...
Executing 'create-normal':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f2 rbx 0000000000000000 rcx 0000800421bc25f3 rdx 0000000000000063
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f2
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 63 ticks
Thread: 30 idle ticks, 29 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1794 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/create-exists FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/create-exists:

Kernel command line: -q -f put create-exists run create-exists
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  78,540,800 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 104 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'create-exists' into the file system...
Executing 'create-exists':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f2 rbx 0000000000000000 rcx 0000800421bc25f3 rdx 0000000000000063
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f2
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 62 ticks
Thread: 32 idle ticks, 27 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 236 writes
hd1:0: 104 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1793 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-missing FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/open-missing:

Kernel command line: -q -f put open-missing run open-missing
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'open-missing' into the file system...
Executing 'open-missing':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 000000000000006f
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 68 ticks
Thread: 34 idle ticks, 30 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1790 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-normal FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/open-normal:

Kernel command line: -q -f put open-normal put sample.txt run open-normal
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 105 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'open-normal' into the file system...
Putting 'sample.txt' into the file system...
Executing 'open-normal':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f4 rbx 0000000000000000 rcx 0000800421bc25f5 rdx 000000000000006f
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f4
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 64 ticks
Thread: 34 idle ticks, 27 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 248 writes
hd1:0: 105 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1846 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-twice FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/open-twice:

Kernel command line: -q -f put open-twice put sample.txt run open-twice
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 105 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'open-twice' into the file system...
Putting 'sample.txt' into the file system...
Executing 'open-twice':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f5 rbx 0000000000000000 rcx 0000800421bc25f6 rdx 000000000000006f
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f5
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 66 ticks
Thread: 34 idle ticks, 29 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 248 writes
hd1:0: 105 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1842 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-normal FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/read-normal:

Kernel command line: -q -f put read-normal put sample.txt run read-normal
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 105 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'read-normal' into the file system...
Putting 'sample.txt' into the file system...
Executing 'read-normal':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f4 rbx 0000000000000000 rcx 0000800421bc25f5 rdx 0000000000000072
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f4
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 68 ticks
Thread: 35 idle ticks, 30 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 248 writes
hd1:0: 105 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1846 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-zero FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/read-zero:

Kernel command line: -q -f put read-zero put sample.txt run read-zero
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 105 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'read-zero' into the file system...
Putting 'sample.txt' into the file system...
Executing 'read-zero':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 0000000000000072
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 64 ticks
Thread: 30 idle ticks, 31 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 248 writes
hd1:0: 105 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1838 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-normal FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/write-normal:

Kernel command line: -q -f put write-normal put sample.txt run write-normal
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 107 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'write-normal' into the file system...
Putting 'sample.txt' into the file system...
Executing 'write-normal':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 0000000000000077
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 67 ticks
Thread: 36 idle ticks, 29 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 252 writes
hd1:0: 107 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1850 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-zero FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/write-zero:

Kernel command line: -q -f put write-zero put sample.txt run write-zero
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 105 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'write-zero' into the file system...
Putting 'sample.txt' into the file system...
Executing 'write-zero':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f5 rbx 0000000000000000 rcx 0000800421bc25f6 rdx 0000000000000077
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f5
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 68 ticks
Thread: 35 idle ticks, 30 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 248 writes
hd1:0: 105 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1842 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/close-normal FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/close-normal:

Kernel command line: -q -f put close-normal put sample.txt run close-normal
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  154,009,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 105 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'close-normal' into the file system...
Putting 'sample.txt' into the file system...
Executing 'close-normal':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 0000000000000063
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 65 ticks
Thread: 32 idle ticks, 31 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 248 writes
hd1:0: 105 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1850 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/fork-once FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/fork-once:

Kernel command line: -q -f put fork-once run fork-once
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'fork-once' into the file system...
Executing 'fork-once':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 0000000000000066
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 67 ticks
Thread: 34 idle ticks, 27 kernel ticks, 6 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1778 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/fork-multiple FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/fork-multiple:

Kernel command line: -q -f put fork-multiple run fork-multiple
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 104 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'fork-multiple' into the file system...
Executing 'fork-multiple':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f2 rbx 0000000000000000 rcx 0000800421bc25f3 rdx 0000000000000066
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f2
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 64 ticks
Thread: 34 idle ticks, 27 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 236 writes
hd1:0: 104 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1794 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/fork-close FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/fork-close:

Kernel command line: -q -f put fork-close put sample.txt run fork-close
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 110 sector (55 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'fork-close' into the file system...
Putting 'sample.txt' into the file system...
Executing 'fork-close':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f5 rbx 0000000000000000 rcx 0000800421bc25f6 rdx 0000000000000066
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f5
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 68 ticks
Thread: 33 idle ticks, 32 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 258 writes
hd1:0: 110 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1842 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/fork-read FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/fork-read:

Kernel command line: -q -f put fork-read put sample.txt run fork-read
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 111 sector (55 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'fork-read' into the file system...
Putting 'sample.txt' into the file system...
Executing 'fork-read':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 0000000000000066
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 67 ticks
Thread: 35 idle ticks, 29 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 260 writes
hd1:0: 111 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1838 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/exec-once FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/exec-once:

Kernel command line: -q -f put exec-once put child-simple run exec-once
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  111,206,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 203 sector (101 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'exec-once' into the file system...
Putting 'child-simple' into the file system...
Executing 'exec-once':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 0000000000000065
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 75 ticks
Thread: 39 idle ticks, 34 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 444 writes
hd1:0: 203 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1843 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/exec-arg FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/exec-arg:

Kernel command line: -q -f put exec-arg put child-args run exec-arg
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 204 sector (102 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'exec-arg' into the file system...
Putting 'child-args' into the file system...
Executing 'exec-arg':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f7 rbx 0000000000000000 rcx 0000800421bc25f8 rdx 0000000000000065
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f7
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 70 ticks
Thread: 34 idle ticks, 34 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 446 writes
hd1:0: 204 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1835 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/exec-read FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/exec-read:

Kernel command line: -q -f put exec-read put sample.txt put child-read run exec-read
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 229 sector (114 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'exec-read' into the file system...
Putting 'sample.txt' into the file system...
Putting 'child-read' into the file system...
Executing 'exec-read':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 0000000000000065
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 61 ticks
Thread: 30 idle ticks, 29 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 97 reads, 506 writes
hd1:0: 229 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1899 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/wait-simple FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/wait-simple:

Kernel command line: -q -f put wait-simple put child-simple run wait-simple
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 204 sector (102 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'wait-simple' into the file system...
Putting 'child-simple' into the file system...
Executing 'wait-simple':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f4 rbx 0000000000000000 rcx 0000800421bc25f5 rdx 0000000000000077
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f4
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 70 ticks
Thread: 35 idle ticks, 33 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 446 writes
hd1:0: 204 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1851 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/wait-twice FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/wait-twice:

Kernel command line: -q -f put wait-twice put child-simple run wait-twice
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 204 sector (102 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'wait-twice' into the file system...
Putting 'child-simple' into the file system...
Executing 'wait-twice':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f5 rbx 0000000000000000 rcx 0000800421bc25f6 rdx 0000000000000077
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f5
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 72 ticks
Thread: 39 idle ticks, 30 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 446 writes
hd1:0: 204 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1847 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/exit FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/exit:

Kernel command line: -q -f put exit run exit
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'exit' into the file system...
Executing 'exit':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25fb rbx 0000000000000000 rcx 0000800421bc25fc rdx 0000000000000065
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25fb
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 63 ticks
Thread: 30 idle ticks, 29 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1758 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/halt FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/halt:

Kernel command line: -q -f put halt run halt
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'halt' into the file system...
Executing 'halt':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25fb rbx 0000000000000000 rcx 0000800421bc25fc rdx 0000000000000068
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25fb
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 65 ticks
Thread: 30 idle ticks, 32 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1758 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/fork-recursive FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/fork-recursive:

Kernel command line: -q -f put fork-recursive run fork-recursive
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  111,206,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 104 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'fork-recursive' into the file system...
Executing 'fork-recursive':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f1 rbx 0000000000000000 rcx 0000800421bc25f2 rdx 0000000000000066
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f1
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 72 ticks
Thread: 35 idle ticks, 34 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 236 writes
hd1:0: 104 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1798 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/multi-recurse FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/multi-recurse:

Kernel command line: -q -f put multi-recurse run 'multi-recurse 15'
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  78,540,800 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 113 sector (56 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'multi-recurse' into the file system...
Executing 'multi-recurse 15':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25fd rbx 0000000000000000 rcx 0000800421bc25fe rdx 0000000000000031
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241cae rdi 0000800421bc25fd
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 67 ticks
Thread: 34 idle ticks, 30 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 254 writes
hd1:0: 113 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1801 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-simple FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/rox-simple:

Kernel command line: -q -f put rox-simple run rox-simple
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'rox-simple' into the file system...
Executing 'rox-simple':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f5 rbx 0000000000000000 rcx 0000800421bc25f6 rdx 0000000000000072
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f5
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 67 ticks
Thread: 34 idle ticks, 30 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1782 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-child FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/rox-child:

Kernel command line: -q -f put rox-child put child-rox run rox-child
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 220 sector (110 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'rox-child' into the file system...
Putting 'child-rox' into the file system...
Executing 'rox-child':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 0000000000000072
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 67 ticks
Thread: 32 idle ticks, 33 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 478 writes
hd1:0: 220 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1837 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-multichild FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/rox-multichild:

Kernel command line: -q -f put rox-multichild put child-rox run rox-multichild
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 220 sector (110 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'rox-multichild' into the file system...
Putting 'child-rox' into the file system...
Executing 'rox-multichild':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f1 rbx 0000000000000000 rcx 0000800421bc25f2 rdx 0000000000000072
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f1
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 71 ticks
Thread: 37 idle ticks, 32 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 478 writes
hd1:0: 220 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1857 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/close-bad-fd FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/close-bad-fd:

Kernel command line: -q -f put close-bad-fd run close-bad-fd
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'close-bad-fd' into the file system...
Executing 'close-bad-fd':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 0000000000000063
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 60 ticks
Thread: 33 idle ticks, 25 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1790 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/close-twice FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/close-twice:

Kernel command line: -q -f put close-twice put sample.txt run close-twice
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 105 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'close-twice' into the file system...
Putting 'sample.txt' into the file system...
Executing 'close-twice':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f4 rbx 0000000000000000 rcx 0000800421bc25f5 rdx 0000000000000063
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f4
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 71 ticks
Thread: 38 idle ticks, 31 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 248 writes
hd1:0: 105 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1846 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-bad-fd FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/read-bad-fd:

Kernel command line: -q -f put read-bad-fd run read-bad-fd
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'read-bad-fd' into the file system...
Executing 'read-bad-fd':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f4 rbx 0000000000000000 rcx 0000800421bc25f5 rdx 0000000000000072
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f4
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 70 ticks
Thread: 35 idle ticks, 31 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1786 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-stdout FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/read-stdout:

Kernel command line: -q -f put read-stdout run read-stdout
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'read-stdout' into the file system...
Executing 'read-stdout':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f4 rbx 0000000000000000 rcx 0000800421bc25f5 rdx 0000000000000072
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f4
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 66 ticks
Thread: 35 idle ticks, 28 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1786 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-bad-fd FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/write-bad-fd:

Kernel command line: -q -f put write-bad-fd run write-bad-fd
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'write-bad-fd' into the file system...
Executing 'write-bad-fd':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 0000000000000077
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 66 ticks
Thread: 32 idle ticks, 30 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1790 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-stdin FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/write-stdin:

Kernel command line: -q -f put write-stdin run write-stdin
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  150,732,800 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'write-stdin' into the file system...
Executing 'write-stdin':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f4 rbx 0000000000000000 rcx 0000800421bc25f5 rdx 0000000000000077
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f4
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 71 ticks
Thread: 31 idle ticks, 38 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1786 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/multi-child-fd FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/multi-child-fd:

Kernel command line: -q -f put multi-child-fd put sample.txt put child-close run multi-child-fd
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 220 sector (110 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'multi-child-fd' into the file system...
Putting 'sample.txt' into the file system...
Putting 'child-close' into the file system...
Executing 'multi-child-fd':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f1 rbx 0000000000000000 rcx 0000800421bc25f2 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f1
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 64 ticks
Thread: 30 idle ticks, 32 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 97 reads, 488 writes
hd1:0: 220 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1921 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/create-bad-ptr FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/create-bad-ptr:

Kernel command line: -q -f put create-bad-ptr run create-bad-ptr
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'create-bad-ptr' into the file system...
Executing 'create-bad-ptr':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f1 rbx 0000000000000000 rcx 0000800421bc25f2 rdx 0000000000000063
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f1
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 69 ticks
Thread: 33 idle ticks, 33 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1798 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/exec-bad-ptr FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/exec-bad-ptr:

Kernel command line: -q -f put exec-bad-ptr run exec-bad-ptr
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'exec-bad-ptr' into the file system...
Executing 'exec-bad-ptr':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 0000000000000065
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 59 ticks
Thread: 31 idle ticks, 26 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1790 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-bad-ptr FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/open-bad-ptr:

Kernel command line: -q -f put open-bad-ptr run open-bad-ptr
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'open-bad-ptr' into the file system...
Executing 'open-bad-ptr':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 000000000000006f
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 66 ticks
Thread: 33 idle ticks, 30 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1790 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-bad-ptr FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/read-bad-ptr:

Kernel command line: -q -f put read-bad-ptr put sample.txt run read-bad-ptr
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 105 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'read-bad-ptr' into the file system...
Putting 'sample.txt' into the file system...
Executing 'read-bad-ptr':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 0000000000000072
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 68 ticks
Thread: 34 idle ticks, 31 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 248 writes
hd1:0: 105 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1850 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-bad-ptr FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/write-bad-ptr:

Kernel command line: -q -f put write-bad-ptr put sample.txt run write-bad-ptr
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 105 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'write-bad-ptr' into the file system...
Putting 'sample.txt' into the file system...
Executing 'write-bad-ptr':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f2 rbx 0000000000000000 rcx 0000800421bc25f3 rdx 0000000000000077
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f2
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 66 ticks
Thread: 33 idle ticks, 31 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 248 writes
hd1:0: 105 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1854 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/create-bound FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/create-bound:

Kernel command line: -q -f put create-bound run create-bound
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  154,009,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 105 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'create-bound' into the file system...
Executing 'create-bound':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 0000000000000063
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 72 ticks
Thread: 31 idle ticks, 34 kernel ticks, 7 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 238 writes
hd1:0: 105 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1790 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-boundary FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/open-boundary:

Kernel command line: -q -f put open-boundary put sample.txt run open-boundary
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 107 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'open-boundary' into the file system...
Putting 'sample.txt' into the file system...
Executing 'open-boundary':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f2 rbx 0000000000000000 rcx 0000800421bc25f3 rdx 000000000000006f
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f2
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 66 ticks
Thread: 36 idle ticks, 27 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 252 writes
hd1:0: 107 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1854 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-boundary FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/read-boundary:

Kernel command line: -q -f put read-boundary put sample.txt run read-boundary
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  52,377,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 109 sector (54 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'read-boundary' into the file system...
Putting 'sample.txt' into the file system...
Executing 'read-boundary':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f2 rbx 0000000000000000 rcx 0000800421bc25f3 rdx 0000000000000072
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f2
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 65 ticks
Thread: 36 idle ticks, 27 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 67 reads, 256 writes
hd1:0: 109 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1853 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-boundary FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/write-boundary:

Kernel command line: -q -f put write-boundary put sample.txt run write-boundary
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 109 sector (54 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'write-boundary' into the file system...
Putting 'sample.txt' into the file system...
Executing 'write-boundary':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f1 rbx 0000000000000000 rcx 0000800421bc25f2 rdx 0000000000000077
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f1
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 64 ticks
Thread: 32 idle ticks, 29 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 256 writes
hd1:0: 109 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1858 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/fork-boundary FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/fork-boundary:

Kernel command line: -q -f put fork-boundary run fork-boundary
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 106 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'fork-boundary' into the file system...
Executing 'fork-boundary':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f2 rbx 0000000000000000 rcx 0000800421bc25f3 rdx 0000000000000066
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f2
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 67 ticks
Thread: 30 idle ticks, 33 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 240 writes
hd1:0: 106 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1794 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/exec-boundary FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/exec-boundary:

Kernel command line: -q -f put exec-boundary put child-simple run exec-boundary
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 207 sector (103 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'exec-boundary' into the file system...
Putting 'child-simple' into the file system...
Executing 'exec-boundary':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f2 rbx 0000000000000000 rcx 0000800421bc25f3 rdx 0000000000000065
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f2
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 73 ticks
Thread: 38 idle ticks, 33 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 452 writes
hd1:0: 207 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1859 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/create-null FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/create-null:

Kernel command line: -q -f put create-null run create-null
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'create-null' into the file system...
Executing 'create-null':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f4 rbx 0000000000000000 rcx 0000800421bc25f5 rdx 0000000000000063
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f4
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 65 ticks
Thread: 33 idle ticks, 29 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1786 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-null FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/open-null:

Kernel command line: -q -f put open-null run open-null
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'open-null' into the file system...
Executing 'open-null':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 000000000000006f
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 64 ticks
Thread: 32 idle ticks, 29 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1778 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-empty FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/open-empty:

Kernel command line: -q -f put open-empty run open-empty
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'open-empty' into the file system...
Executing 'open-empty':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f5 rbx 0000000000000000 rcx 0000800421bc25f6 rdx 000000000000006f
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f5
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 66 ticks
Thread: 35 idle ticks, 28 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1782 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/exec-missing FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/exec-missing:

Kernel command line: -q -f put exec-missing run exec-missing
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'exec-missing' into the file system...
Executing 'exec-missing':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 0000000000000065
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 64 ticks
Thread: 34 idle ticks, 28 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 40 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1790 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/wait-bad-pid FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/wait-bad-pid:

Kernel command line: -q -f put wait-bad-pid run wait-bad-pid
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'wait-bad-pid' into the file system...
Executing 'wait-bad-pid':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 0000000000000077
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 64 ticks
Thread: 33 idle ticks, 27 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1790 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/wait-killed FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/wait-killed:

Kernel command line: -q -f put wait-killed put child-bad run wait-killed
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  208,076,800 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 205 sector (102 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'wait-killed' into the file system...
Putting 'child-bad' into the file system...
Executing 'wait-killed':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f4 rbx 0000000000000000 rcx 0000800421bc25f5 rdx 0000000000000077
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f4
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 71 ticks
Thread: 32 idle ticks, 34 kernel ticks, 5 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 448 writes
hd1:0: 205 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1845 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-read FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/bad-read:

Kernel command line: -q -f put bad-read run bad-read
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'bad-read' into the file system...
Executing 'bad-read':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f7 rbx 0000000000000000 rcx 0000800421bc25f8 rdx 0000000000000062
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f7
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 65 ticks
Thread: 32 idle ticks, 30 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1774 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-write FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/bad-write:

Kernel command line: -q -f put bad-write run bad-write
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  107,929,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'bad-write' into the file system...
Executing 'bad-write':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 0000000000000062
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 73 ticks
Thread: 32 idle ticks, 37 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1778 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-jump FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/bad-jump:

Kernel command line: -q -f put bad-jump run bad-jump
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'bad-jump' into the file system...
Executing 'bad-jump':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f7 rbx 0000000000000000 rcx 0000800421bc25f8 rdx 0000000000000062
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f7
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 64 ticks
Thread: 33 idle ticks, 28 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1774 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-read2 FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/bad-read2:

Kernel command line: -q -f put bad-read2 run bad-read2
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'bad-read2' into the file system...
Executing 'bad-read2':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 0000000000000062
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 64 ticks
Thread: 34 idle ticks, 27 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1778 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-write2 FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/bad-write2:

Kernel command line: -q -f put bad-write2 run bad-write2
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'bad-write2' into the file system...
Executing 'bad-write2':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f5 rbx 0000000000000000 rcx 0000800421bc25f6 rdx 0000000000000062
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f5
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 60 ticks
Thread: 35 idle ticks, 23 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1782 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-jump2 FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/userprog/bad-jump2:

Kernel command line: -q -f put bad-jump2 run bad-jump2
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'bad-jump2' into the file system...
Executing 'bad-jump2':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 0000000000000062
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 67 ticks
Thread: 32 idle ticks, 31 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1778 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/pt-grow-stack FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/pt-grow-stack:

Kernel command line: -q -f put pt-grow-stack run pt-grow-stack
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 113 sector (56 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'pt-grow-stack' into the file system...
Executing 'pt-grow-stack':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f2 rbx 0000000000000000 rcx 0000800421bc25f3 rdx 0000000000000070
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f2
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 64 ticks
Thread: 33 idle ticks, 28 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 254 writes
hd1:0: 113 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1794 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/pt-grow-stk-sc FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/pt-grow-stk-sc:

Kernel command line: -q -f put pt-grow-stk-sc run pt-grow-stk-sc
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 107 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'pt-grow-stk-sc' into the file system...
Executing 'pt-grow-stk-sc':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f1 rbx 0000000000000000 rcx 0000800421bc25f2 rdx 0000000000000070
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f1
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 65 ticks
Thread: 33 idle ticks, 29 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 242 writes
hd1:0: 107 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1798 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/pt-big-stk-obj FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/pt-big-stk-obj:

Kernel command line: -q -f put pt-big-stk-obj run pt-big-stk-obj
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 113 sector (56 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'pt-big-stk-obj' into the file system...
Executing 'pt-big-stk-obj':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f1 rbx 0000000000000000 rcx 0000800421bc25f2 rdx 0000000000000070
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f1
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 66 ticks
Thread: 33 idle ticks, 30 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 254 writes
hd1:0: 113 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1798 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/page-linear FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/page-linear:

Kernel command line: -q -f put page-linear run page-linear
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 108 sector (54 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'page-linear' into the file system...
Executing 'page-linear':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f4 rbx 0000000000000000 rcx 0000800421bc25f5 rdx 0000000000000070
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f4
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 73 ticks
Thread: 37 idle ticks, 32 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 244 writes
hd1:0: 108 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1786 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/page-parallel FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/page-parallel:

Kernel command line: -q -f put page-parallel put child-linear run page-parallel
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 209 sector (104 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'page-parallel' into the file system...
Putting 'child-linear' into the file system...
Executing 'page-parallel':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f2 rbx 0000000000000000 rcx 0000800421bc25f3 rdx 0000000000000070
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f2
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 75 ticks
Thread: 36 idle ticks, 36 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 456 writes
hd1:0: 209 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1859 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/page-shuffle FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/page-shuffle:

Kernel command line: -q -f put page-shuffle run page-shuffle
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 113 sector (56 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'page-shuffle' into the file system...
Executing 'page-shuffle':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 0000000000000070
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 62 ticks
Thread: 34 idle ticks, 25 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 254 writes
hd1:0: 113 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1790 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/page-merge-seq FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/page-merge-seq:

Kernel command line: -q -f put page-merge-seq put child-sort run page-merge-seq
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 216 sector (108 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'page-merge-seq' into the file system...
Putting 'child-sort' into the file system...
Executing 'page-merge-seq':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f1 rbx 0000000000000000 rcx 0000800421bc25f2 rdx 0000000000000070
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f1
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 66 ticks
Thread: 30 idle ticks, 33 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 470 writes
hd1:0: 216 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1859 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/page-merge-par FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/page-merge-par:

Kernel command line: -q -f put page-merge-par put child-sort run page-merge-par
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 218 sector (109 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'page-merge-par' into the file system...
Putting 'child-sort' into the file system...
Executing 'page-merge-par':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f1 rbx 0000000000000000 rcx 0000800421bc25f2 rdx 0000000000000070
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f1
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 73 ticks
Thread: 34 idle ticks, 36 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 474 writes
hd1:0: 218 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1860 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/page-merge-mm FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/page-merge-mm:

Kernel command line: -q -f put page-merge-mm put child-qsort-mm run page-merge-mm
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  150,732,800 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 224 sector (112 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'page-merge-mm' into the file system...
Putting 'child-qsort-mm' into the file system...
Executing 'page-merge-mm':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f2 rbx 0000000000000000 rcx 0000800421bc25f3 rdx 0000000000000070
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f2
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 77 ticks
Thread: 31 idle ticks, 43 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 486 writes
hd1:0: 224 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1864 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/page-merge-stk FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/page-merge-stk:

Kernel command line: -q -f put page-merge-stk put child-qsort run page-merge-stk
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 224 sector (112 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'page-merge-stk' into the file system...
Putting 'child-qsort' into the file system...
Executing 'page-merge-stk':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f1 rbx 0000000000000000 rcx 0000800421bc25f2 rdx 0000000000000070
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f1
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 68 ticks
Thread: 35 idle ticks, 29 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 486 writes
hd1:0: 224 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1862 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-read FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-read:

Kernel command line: -q -f put mmap-read put sample.txt run mmap-read
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 109 sector (54 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-read' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-read':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 69 ticks
Thread: 34 idle ticks, 31 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 256 writes
hd1:0: 109 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1838 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-write FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-write:

Kernel command line: -q -f put mmap-write run mmap-write
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  155,648,000 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 107 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-write' into the file system...
Executing 'mmap-write':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f5 rbx 0000000000000000 rcx 0000800421bc25f6 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f5
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 67 ticks
Thread: 33 idle ticks, 31 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 242 writes
hd1:0: 107 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1782 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-ro FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-ro:

Kernel command line: -q -f put mmap-ro put large.txt run mmap-ro
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 4,018 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-ro' into the file system...
Putting 'large.txt' into the file system...
Executing 'mmap-ro':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f8 rbx 0000000000000000 rcx 0000800421bc25f9 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f8
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 144 ticks
Thread: 35 idle ticks, 107 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 8074 writes
hd1:0: 4018 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1833 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-shuffle FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-shuffle:

Kernel command line: -q -f put mmap-shuffle run mmap-shuffle
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 114 sector (57 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-shuffle' into the file system...
Executing 'mmap-shuffle':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 72 ticks
Thread: 35 idle ticks, 31 kernel ticks, 6 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 256 writes
hd1:0: 114 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1790 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-twice FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-twice:

Kernel command line: -q -f put mmap-twice put sample.txt run mmap-twice
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 109 sector (54 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-twice' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-twice':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f5 rbx 0000000000000000 rcx 0000800421bc25f6 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f5
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 70 ticks
Thread: 36 idle ticks, 31 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 256 writes
hd1:0: 109 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1842 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-unmap FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-unmap:

Kernel command line: -q -f put mmap-unmap put sample.txt run mmap-unmap
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 109 sector (54 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-unmap' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-unmap':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f5 rbx 0000000000000000 rcx 0000800421bc25f6 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f5
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 68 ticks
Thread: 35 idle ticks, 30 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 256 writes
hd1:0: 109 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1842 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-exit FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-exit:

Kernel command line: -q -f put mmap-exit put child-mm-wrt run mmap-exit
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 210 sector (105 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-exit' into the file system...
Putting 'child-mm-wrt' into the file system...
Executing 'mmap-exit':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 70 ticks
Thread: 32 idle ticks, 34 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 458 writes
hd1:0: 210 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1843 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-clean FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-clean:

Kernel command line: -q -f put mmap-clean put sample.txt run mmap-clean
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 112 sector (56 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-clean' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-clean':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f5 rbx 0000000000000000 rcx 0000800421bc25f6 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f5
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 70 ticks
Thread: 33 idle ticks, 34 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 262 writes
hd1:0: 112 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1842 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-close FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-close:

Kernel command line: -q -f put mmap-close put sample.txt run mmap-close
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 109 sector (54 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-close' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-close':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f5 rbx 0000000000000000 rcx 0000800421bc25f6 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f5
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 68 ticks
Thread: 37 idle ticks, 28 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 256 writes
hd1:0: 109 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1842 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-remove FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-remove:

Kernel command line: -q -f put mmap-remove put sample.txt run mmap-remove
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 110 sector (55 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-remove' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-remove':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f4 rbx 0000000000000000 rcx 0000800421bc25f5 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f4
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 65 ticks
Thread: 34 idle ticks, 28 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 258 writes
hd1:0: 110 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1846 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-off FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-off:

Kernel command line: -q -f put mmap-off put large.txt run mmap-off
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 7,933 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-off' into the file system...
Putting 'large.txt' into the file system...
Executing 'mmap-off':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f7 rbx 0000000000000000 rcx 0000800421bc25f8 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f7
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 261 ticks
Thread: 99 idle ticks, 160 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 15904 writes
hd1:0: 7933 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1838 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/swap-anon FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/swap-anon:

Kernel command line: -q -f put swap-anon run swap-anon
0 ~ 9fc00 1
100000 ~ 9e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x9e0000 (Usable: 9,088 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 104 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 60,480 sector (29 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'swap-anon' into the file system...
Executing 'swap-anon':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 0000000000000073
rsp 000000800423cbf0 rbp 000000800423cc20 rsi 000000800423cca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 72 ticks
Thread: 36 idle ticks, 26 kernel ticks, 10 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 236 writes
hd1:0: 104 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1778 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/swap-file FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/swap-file:

Kernel command line: -q -f put swap-file put large.txt run swap-file
0 ~ 9fc00 1
100000 ~ 7e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x7e0000 (Usable: 7,040 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 7,931 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'swap-file' into the file system...
Putting 'large.txt' into the file system...
Executing 'swap-file':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 0000000000000073
rsp 000000800423bbf0 rbp 000000800423bc20 rsi 000000800423bca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 283 ticks
Thread: 118 idle ticks, 162 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 15900 writes
hd1:0: 7931 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1841 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/swap-iter FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/swap-iter:

Kernel command line: -q -f put swap-iter put large.txt run swap-iter
0 ~ 9fc00 1
100000 ~ 9e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x9e0000 (Usable: 9,088 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 7,932 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 100,800 sector (49 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'swap-iter' into the file system...
Putting 'large.txt' into the file system...
Executing 'swap-iter':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 0000000000000073
rsp 000000800423cbf0 rbp 000000800423cc20 rsi 000000800423cca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 234 ticks
Thread: 58 idle ticks, 163 kernel ticks, 13 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 15902 writes
hd1:0: 7932 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1843 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/swap-fork FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/swap-fork:

Kernel command line: -q -f put swap-fork put child-swap run swap-fork
0 ~ 9fc00 1
100000 ~ 27e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x27e0000 (Usable: 39,808 kB)
Calibrating timer...  105,472,000 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 4,119 sector (2 MB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 403,200 sector (196 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'swap-fork' into the file system...
Putting 'child-swap' into the file system...
Executing 'swap-fork':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 0000000000000073
rsp 000000800424bbf0 rbp 000000800424bc20 rsi 000000800424bca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 217 ticks
Thread: 109 idle ticks, 105 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 8276 writes
hd1:0: 4119 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1848 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/lazy-anon FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/lazy-anon:

Kernel command line: -q -f put lazy-anon run lazy-anon
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 105 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'lazy-anon' into the file system...
Executing 'lazy-anon':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 000000000000006c
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 65 ticks
Thread: 33 idle ticks, 29 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 238 writes
hd1:0: 105 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1778 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/lazy-file FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/lazy-file:

Kernel command line: -q -f put lazy-file put sample.txt put small.txt run lazy-file
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 151 sector (75 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'lazy-file' into the file system...
Putting 'sample.txt' into the file system...
Putting 'small.txt' into the file system...
Executing 'lazy-file':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 000000000000006c
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 70 ticks
Thread: 34 idle ticks, 33 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 97 reads, 350 writes
hd1:0: 151 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1896 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/pt-bad-addr FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/pt-bad-addr:

Kernel command line: -q -f put pt-bad-addr run pt-bad-addr
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'pt-bad-addr' into the file system...
Executing 'pt-bad-addr':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f4 rbx 0000000000000000 rcx 0000800421bc25f5 rdx 0000000000000070
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f4
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 64 ticks
Thread: 33 idle ticks, 28 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1786 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/pt-bad-read FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/pt-bad-read:

Kernel command line: -q -f put pt-bad-read put sample.txt run pt-bad-read
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 106 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'pt-bad-read' into the file system...
Putting 'sample.txt' into the file system...
Executing 'pt-bad-read':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f4 rbx 0000000000000000 rcx 0000800421bc25f5 rdx 0000000000000070
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f4
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 65 ticks
Thread: 31 idle ticks, 31 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 250 writes
hd1:0: 106 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1846 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/pt-write-code FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/pt-write-code:

Kernel command line: -q -f put pt-write-code run pt-write-code
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  144,793,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'pt-write-code' into the file system...
Executing 'pt-write-code':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f2 rbx 0000000000000000 rcx 0000800421bc25f3 rdx 0000000000000070
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f2
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 70 ticks
Thread: 33 idle ticks, 35 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1794 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/pt-write-code2 FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/pt-write-code2:

Kernel command line: -q -f put pt-write-code2 put sample.txt run pt-write-code2
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 106 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'pt-write-code2' into the file system...
Putting 'sample.txt' into the file system...
Executing 'pt-write-code2':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f1 rbx 0000000000000000 rcx 0000800421bc25f2 rdx 0000000000000070
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f1
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 62 ticks
Thread: 36 idle ticks, 23 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 250 writes
hd1:0: 106 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1858 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/pt-grow-bad FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/pt-grow-bad:

Kernel command line: -q -f put pt-grow-bad run pt-grow-bad
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  107,520,000 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'pt-grow-bad' into the file system...
Executing 'pt-grow-bad':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f4 rbx 0000000000000000 rcx 0000800421bc25f5 rdx 0000000000000070
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f4
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 68 ticks
Thread: 33 idle ticks, 33 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 232 writes
hd1:0: 102 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1786 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-bad-fd FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-bad-fd:

Kernel command line: -q -f put mmap-bad-fd run mmap-bad-fd
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-bad-fd' into the file system...
Executing 'mmap-bad-fd':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f4 rbx 0000000000000000 rcx 0000800421bc25f5 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f4
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 66 ticks
Thread: 34 idle ticks, 28 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1786 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-bad-fd2 FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-bad-fd2:

Kernel command line: -q -f put mmap-bad-fd2 run mmap-bad-fd2
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-bad-fd2' into the file system...
Executing 'mmap-bad-fd2':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 69 ticks
Thread: 34 idle ticks, 28 kernel ticks, 7 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1790 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-bad-fd3 FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-bad-fd3:

Kernel command line: -q -f put mmap-bad-fd3 run mmap-bad-fd3
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-bad-fd3' into the file system...
Executing 'mmap-bad-fd3':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 68 ticks
Thread: 33 idle ticks, 32 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1790 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-inherit FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-inherit:

Kernel command line: -q -f put mmap-inherit put sample.txt put child-inherit run mmap-inherit
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 215 sector (107 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-inherit' into the file system...
Putting 'sample.txt' into the file system...
Putting 'child-inherit' into the file system...
Executing 'mmap-inherit':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 71 ticks
Thread: 33 idle ticks, 36 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 97 reads, 478 writes
hd1:0: 215 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1917 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-null FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-null:

Kernel command line: -q -f put mmap-null put sample.txt run mmap-null
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 106 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-null' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-null':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 64 ticks
Thread: 34 idle ticks, 27 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 250 writes
hd1:0: 106 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1838 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-zero FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-zero:

Kernel command line: -q -f put mmap-zero run mmap-zero
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-zero' into the file system...
Executing 'mmap-zero':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 63 ticks
Thread: 34 idle ticks, 26 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1778 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-zero-len FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-zero-len:

Kernel command line: -q -f put mmap-zero-len run mmap-zero-len
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 106 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-zero-len' into the file system...
Executing 'mmap-zero-len':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f2 rbx 0000000000000000 rcx 0000800421bc25f3 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f2
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 66 ticks
Thread: 31 idle ticks, 31 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 240 writes
hd1:0: 106 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1794 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-misalign FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-misalign:

Kernel command line: -q -f put mmap-misalign put sample.txt run mmap-misalign
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  154,009,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 106 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-misalign' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-misalign':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f2 rbx 0000000000000000 rcx 0000800421bc25f3 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f2
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 75 ticks
Thread: 35 idle ticks, 35 kernel ticks, 5 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 250 writes
hd1:0: 106 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1854 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-over-code FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-over-code:

Kernel command line: -q -f put mmap-over-code put sample.txt run mmap-over-code
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 106 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-over-code' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-over-code':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f1 rbx 0000000000000000 rcx 0000800421bc25f2 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f1
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 62 ticks
Thread: 30 idle ticks, 29 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 250 writes
hd1:0: 106 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1858 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-over-data FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-over-data:

Kernel command line: -q -f put mmap-over-data put sample.txt run mmap-over-data
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 106 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-over-data' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-over-data':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f1 rbx 0000000000000000 rcx 0000800421bc25f2 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f1
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 65 ticks
Thread: 35 idle ticks, 28 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 250 writes
hd1:0: 106 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1858 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-over-stk FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-over-stk:

Kernel command line: -q -f put mmap-over-stk put sample.txt run mmap-over-stk
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  78,540,800 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 106 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-over-stk' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-over-stk':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f2 rbx 0000000000000000 rcx 0000800421bc25f3 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f2
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 62 ticks
Thread: 33 idle ticks, 27 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 250 writes
hd1:0: 106 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1853 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-overlap FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-overlap:

Kernel command line: -q -f put mmap-overlap put zeros run mmap-overlap
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 119 sector (59 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-overlap' into the file system...
Putting 'zeros' into the file system...
Executing 'mmap-overlap':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 65 ticks
Thread: 31 idle ticks, 31 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 67 reads, 276 writes
hd1:0: 119 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1840 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-bad-off FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-bad-off:

Kernel command line: -q -f put mmap-bad-off put large.txt run mmap-bad-off
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 4,017 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-bad-off' into the file system...
Putting 'large.txt' into the file system...
Executing 'mmap-bad-off':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 188 ticks
Thread: 90 idle ticks, 96 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 8072 writes
hd1:0: 4017 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1852 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-kernel FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/mmap-kernel:

Kernel command line: -q -f put mmap-kernel put sample.txt run mmap-kernel
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 107 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-kernel' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-kernel':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f4 rbx 0000000000000000 rcx 0000800421bc25f5 rdx 000000000000006d
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f4
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 67 ticks
Thread: 33 idle ticks, 31 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 252 writes
hd1:0: 107 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1846 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-create FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/filesys/base/sm-create:

Kernel command line: -q -f put sm-create run sm-create
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 107 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'sm-create' into the file system...
Executing 'sm-create':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 0000000000000073
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 61 ticks
Thread: 31 idle ticks, 27 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 242 writes
hd1:0: 107 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1778 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-full FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/filesys/base/sm-full:

Kernel command line: -q -f put sm-full run sm-full
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  150,732,800 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 106 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'sm-full' into the file system...
Executing 'sm-full':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f8 rbx 0000000000000000 rcx 0000800421bc25f9 rdx 0000000000000073
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f8
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 74 ticks
Thread: 34 idle ticks, 36 kernel ticks, 4 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 240 writes
hd1:0: 106 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1770 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-random FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/filesys/base/sm-random:

Kernel command line: -q -f put sm-random run sm-random
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 110 sector (55 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'sm-random' into the file system...
Executing 'sm-random':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 0000000000000073
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 68 ticks
Thread: 35 idle ticks, 28 kernel ticks, 5 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 248 writes
hd1:0: 110 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1778 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-seq-block FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/filesys/base/sm-seq-block:

Kernel command line: -q -f put sm-seq-block run sm-seq-block
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 106 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'sm-seq-block' into the file system...
Executing 'sm-seq-block':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 0000000000000073
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 63 ticks
Thread: 32 idle ticks, 28 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 40 reads, 240 writes
hd1:0: 106 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1790 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-seq-random FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/filesys/base/sm-seq-random:

Kernel command line: -q -f put sm-seq-random run sm-seq-random
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 107 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'sm-seq-random' into the file system...
Executing 'sm-seq-random':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f2 rbx 0000000000000000 rcx 0000800421bc25f3 rdx 0000000000000073
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f2
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 66 ticks
Thread: 32 idle ticks, 31 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 242 writes
hd1:0: 107 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1794 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-create FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/filesys/base/lg-create:

Kernel command line: -q -f put lg-create run lg-create
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 107 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'lg-create' into the file system...
Executing 'lg-create':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 000000000000006c
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 60 ticks
Thread: 30 idle ticks, 27 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 242 writes
hd1:0: 107 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1778 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-full FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/filesys/base/lg-full:

Kernel command line: -q -f put lg-full run lg-full
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 106 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'lg-full' into the file system...
Executing 'lg-full':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f8 rbx 0000000000000000 rcx 0000800421bc25f9 rdx 000000000000006c
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f8
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 61 ticks
Thread: 30 idle ticks, 28 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 40 reads, 240 writes
hd1:0: 106 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1770 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-random FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/filesys/base/lg-random:

Kernel command line: -q -f put lg-random run lg-random
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 110 sector (55 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'lg-random' into the file system...
Executing 'lg-random':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 000000000000006c
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 70 ticks
Thread: 36 idle ticks, 27 kernel ticks, 7 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 248 writes
hd1:0: 110 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1778 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-seq-block FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/filesys/base/lg-seq-block:

Kernel command line: -q -f put lg-seq-block run lg-seq-block
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 107 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'lg-seq-block' into the file system...
Executing 'lg-seq-block':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f3 rbx 0000000000000000 rcx 0000800421bc25f4 rdx 000000000000006c
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f3
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 63 ticks
Thread: 31 idle ticks, 29 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 242 writes
hd1:0: 107 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1790 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-seq-random FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/filesys/base/lg-seq-random:

Kernel command line: -q -f put lg-seq-random run lg-seq-random
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 107 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'lg-seq-random' into the file system...
Executing 'lg-seq-random':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f2 rbx 0000000000000000 rcx 0000800421bc25f3 rdx 000000000000006c
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f2
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000004000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 61 ticks
Thread: 33 idle ticks, 26 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 242 writes
hd1:0: 107 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1794 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-read FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/filesys/base/syn-read:

Kernel command line: -q -f put syn-read put child-syn-read run syn-read
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 225 sector (112 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'syn-read' into the file system...
Putting 'child-syn-read' into the file system...
Executing 'syn-read':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f7 rbx 0000000000000000 rcx 0000800421bc25f8 rdx 0000000000000073
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f7
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 69 ticks
Thread: 34 idle ticks, 33 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 488 writes
hd1:0: 225 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1843 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-write FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/filesys/base/syn-write:

Kernel command line: -q -f put syn-write put child-syn-wrt run syn-write
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 226 sector (113 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'syn-write' into the file system...
Putting 'child-syn-wrt' into the file system...
Executing 'syn-write':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f6 rbx 0000000000000000 rcx 0000800421bc25f7 rdx 0000000000000073
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f6
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 74 ticks
Thread: 39 idle ticks, 32 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 68 reads, 490 writes
hd1:0: 226 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1845 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-remove FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/filesys/base/syn-remove:

Kernel command line: -q -f put syn-remove run syn-remove
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 109 sector (54 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'syn-remove' into the file system...
Executing 'syn-remove':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f5 rbx 0000000000000000 rcx 0000800421bc25f6 rdx 0000000000000073
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f5
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 64 ticks
Thread: 34 idle ticks, 28 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 246 writes
hd1:0: 109 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1782 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/cow/cow-simple FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5
Translation of call stack:
0x00000080042186b8: debug_panic (lib/kernel/debug.c:32)
0x000000800421d638: kill (userprog/exception.c:103)
0x000000800420936e: intr_handler (threads/interrupt.c:352)
0x000000800420978c: intr_entry (threads/intr-stubs.o:?)
0x00000080042180eb: strlcpy (lib/string.c:314)
0x000000800421cca6: push_arguments (userprog/process.c:604)
0x000000800421ca2d: load (userprog/process.c:544)
0x000000800421c1ad: process_exec (userprog/process.c:246)
0x000000800421bd96: initd (userprog/process.c:86)
0x0000008004207cb5: kernel_thread (threads/thread.c:621)

OUTPUT FROM tests/vm/cow/cow-simple:

Kernel command line: -q -f put cow-simple run cow-simple
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 4,019 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'cow-simple' into the file system...
Executing 'cow-simple':
Interrupt 0x0d (#GP General Protection Exception) at rip=8004217661
 cr2=0000000000000000 error=               0
rax 0000800421bc25f5 rbx 0000000000000000 rcx 0000800421bc25f6 rdx 0000000000000063
rsp 0000008004241bf0 rbp 0000008004241c20 rsi 0000008004241ca0 rdi 0000800421bc25f5
rip 0000008004217661 r8 000000800420d5b0  r9 0000008004222437 r10 0000000000005000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x80042186b8 0x800421d638 0x800420936e 0x800420978c 0x80042180eb 0x800421cca6 0x800421ca2d 0x800421c1ad 0x800421bd96 0x8004207cb5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 205 ticks
Thread: 108 idle ticks, 95 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 41 reads, 8066 writes
hd1:0: 4019 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1787 characters output
Key